<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>